<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>